<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>